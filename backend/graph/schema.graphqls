# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @goField(
  forceResolver: Boolean
  name: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

# new directive
directive @auth on FIELD_DEFINITION
directive @spotify on FIELD_DEFINITION

scalar Any
scalar Time

type Release {
  _id: Int!
  title: String!
  artists: [String!]!
  featurings: [String!]
  date: Time!
  cover: String
  genres: [String!]
  producers: [String!]
  tracklist: [String!]
  type: String!
  aoty_id: String
  trending_score: Float
}

type ReleasesList {
  releases: [Release!]!
  prev: Boolean!
  next: Boolean!
}

type User {
  _id: ID!
  display_name: String!
  email: String!
}

type AuthOps {
  login(email: String!, password: String!): Any! @goField(forceResolver: true)
  register(input: NewUser!): Any! @goField(forceResolver: true)
  spotifyLogin(code: String!): Any! @goField(forceResolver: true)
}

type Query {
  trendingReleases(input: ReleasesInput!): ReleasesList!
    @goField(forceResolver: true)
  release(id: Int!): Release! @goField(forceResolver: true)
  user(id: ID!): User! @goField(forceResolver: true)
  protected: String! @goField(forceResolver: true) @auth
  recommendations(input: RecommendationsInput!): [Release]!
    @goField(forceResolver: true)
    @spotify
}

type Mutation {
  auth: AuthOps! @goField(forceResolver: true)
}

input NewUser {
  display_name: String!
  email: String!
  password: String!
}

input ReleasesInput {
  type: String!
  direction: String!
  reference: Int!
  period: String!
}

input RecommendationsInput {
  period: String!
}
